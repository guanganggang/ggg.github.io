{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/hexo-theme-landfarz-master/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/hexo-theme-landfarz-master/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/hexo-theme-landfarz-master/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/hexo-theme-landfarz-master/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-landfarz-master/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-landfarz-master/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-landfarz-master/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-landfarz-master/source/js/gallery.js","path":"js/gallery.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-landfarz-master/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-landfarz-master/source/js/jquery.imagesloaded.min.js","path":"js/jquery.imagesloaded.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-landfarz-master/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/hexo-theme-landfarz-master/source/css/font/fontawesome-webfont.woff","path":"css/font/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-landfarz-master/source/css/images/favicon.ico","path":"css/images/favicon.ico","modified":0,"renderable":1},{"_id":"themes/hexo-theme-landfarz-master/source/css/font/fontawesome-webfont.svg","path":"css/font/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-landfarz-master/source/css/images/body.jpg","path":"css/images/body.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-landfarz-master/source/css/font/fontawesome-webfont.ttf","path":"css/font/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-landfarz-master/source/css/font/fontawesome-webfont.eot","path":"css/font/fontawesome-webfont.eot","modified":0,"renderable":1}],"Cache":[{"_id":"themes/hexo-theme-landfarz-master/.gitignore","hash":"eaa3d84cb77d92a21b111fd1e37f53edc1ff9de0","modified":1556258222028},{"_id":"themes/hexo-theme-landfarz-master/README.md","hash":"625967b434141eb98fbb7a62a9ec405809481cac","modified":1556258222040},{"_id":"source/_posts/互联网分层架构的本质.md","hash":"1e58f38d5fc20dda706b95d1fb1e98443becc7a6","modified":1557403643655},{"_id":"source/_posts/互联网分层架构之-DAO与服务化.md","hash":"680bc00f1a55688da28b1c4df666b3a7a0af2b29","modified":1557457565668},{"_id":"themes/hexo-theme-landfarz-master/_config.yml","hash":"f7d7ef65580c8fb8b03009f28e55b38e6eddaedd","modified":1556258222044},{"_id":"themes/hexo-theme-landfarz-master/languages/de.yml","hash":"1ebe2d4f1b48c84e004c933bec65731fb54c9998","modified":1556258222049},{"_id":"themes/hexo-theme-landfarz-master/languages/default.yml","hash":"360a92ba57b6f7cdfccab4c758f0832f61c6b029","modified":1556258222053},{"_id":"themes/hexo-theme-landfarz-master/languages/ru.yml","hash":"37161bb9b6cc2dae1f53837185be32e7a0b8abfa","modified":1556258222100},{"_id":"themes/hexo-theme-landfarz-master/languages/es.yml","hash":"727707b95580bbe9773edef4c84a9735fd537742","modified":1556258222097},{"_id":"themes/hexo-theme-landfarz-master/languages/zh-CN.yml","hash":"0395331b72062d8a1d7c92e3a45f5f5ca9dda254","modified":1556258222108},{"_id":"themes/hexo-theme-landfarz-master/languages/zh-TW.yml","hash":"2a172dae38a7554b36b031c20dd1625ce12379ed","modified":1556258222112},{"_id":"themes/hexo-theme-landfarz-master/layout/category.ejs","hash":"9b740fc33f6f028df60f0bc4312bf3ebd03aa8ea","modified":1556258222364},{"_id":"themes/hexo-theme-landfarz-master/layout/archive.ejs","hash":"a18842e3d719fe3ca9b977a6995f8facc75c8673","modified":1556258222360},{"_id":"themes/hexo-theme-landfarz-master/layout/layout.ejs","hash":"6999916072898aedfe13f4a07211dd1578ad4799","modified":1556258222382},{"_id":"themes/hexo-theme-landfarz-master/layout/page.ejs","hash":"70cbc9854655773cc6ba84eecaaf330fed430465","modified":1556258222398},{"_id":"themes/hexo-theme-landfarz-master/layout/index.ejs","hash":"c7cf84c84c26f1adfc249bc9a7605206fa245f73","modified":1556258222373},{"_id":"themes/hexo-theme-landfarz-master/layout/post.ejs","hash":"70cbc9854655773cc6ba84eecaaf330fed430465","modified":1556258222399},{"_id":"themes/hexo-theme-landfarz-master/layout/tag.ejs","hash":"45150a2365768b6b67880193c9264ad2bb4814db","modified":1556258222403},{"_id":"themes/hexo-theme-landfarz-master/LICENSE","hash":"ccf796b213c60a50d27e907c11463c30cf979576","modified":1556258222036},{"_id":"source/_posts/互联网分层架构之-DAO与服务化/20190510100710.jpg","hash":"d6e2f814b4343612e4637e9066146811e3f2cfb8","modified":1557454063543},{"_id":"source/_posts/.idea/_posts.iml","hash":"4240dabdc746a36bae8a56eeec04a3a3fc59d842","modified":1556261967487},{"_id":"themes/hexo-theme-landfarz-master/layout/_partial/after_footer.ejs","hash":"f0c7c0e7746c046b34299c7f615f61410e14596e","modified":1556258222121},{"_id":"themes/hexo-theme-landfarz-master/layout/_partial/facebook_comment.ejs","hash":"49ee54e84fe2b70bd9540e2eeba5a85f744941b0","modified":1556258222179},{"_id":"themes/hexo-theme-landfarz-master/layout/_partial/archive.ejs","hash":"eaab5ad657f16dfc6cff6f462e1234c3cb8f23a0","modified":1556258222137},{"_id":"themes/hexo-theme-landfarz-master/layout/_partial/comment.ejs","hash":"605ce482540ea710df4c832ee0efcdd9909ce1ee","modified":1556258222169},{"_id":"themes/hexo-theme-landfarz-master/layout/_partial/article.ejs","hash":"abd81dff0d4e7fc088ff39c84e0dfcbdb9e3328e","modified":1556258222155},{"_id":"themes/hexo-theme-landfarz-master/layout/_partial/header.ejs","hash":"73c45d7426009feb495710b054868a7f10616178","modified":1556258222264},{"_id":"themes/hexo-theme-landfarz-master/layout/_partial/google_analytics.ejs","hash":"d70d287956e90e99ba35b2e14cefb477f9203aa0","modified":1556258222204},{"_id":"themes/hexo-theme-landfarz-master/layout/_partial/pagination.ejs","hash":"a7df8d2d87c6773b74e8dd1ae044b92d72c5c2b0","modified":1556258222270},{"_id":"themes/hexo-theme-landfarz-master/layout/_partial/sidebar.ejs","hash":"016441ca9534769d8e151cffe4027686e9c86f18","modified":1556258222324},{"_id":"themes/hexo-theme-landfarz-master/layout/_partial/footer.ejs","hash":"7b7badba807c75826622b73385fc852246e09679","modified":1556258222195},{"_id":"themes/hexo-theme-landfarz-master/layout/_widget/recent_posts.ejs","hash":"59f6f8362fa23a6215e3381151a59c2e2a5fd0d3","modified":1556258222341},{"_id":"themes/hexo-theme-landfarz-master/layout/_widget/search.ejs","hash":"93d4a690494dfa405024f23511846ea00d647be7","modified":1556258222345},{"_id":"themes/hexo-theme-landfarz-master/layout/_widget/category.ejs","hash":"c163a146b0f963f257ddcc244f413bef281fe0a0","modified":1556258222333},{"_id":"themes/hexo-theme-landfarz-master/layout/_partial/head.ejs","hash":"50d951b5c24c3a82a31fa46250de813bfe028171","modified":1556258222259},{"_id":"themes/hexo-theme-landfarz-master/layout/_widget/tag.ejs","hash":"6bf8214fedb8d6306e017e07ad67aab956496500","modified":1556258222352},{"_id":"themes/hexo-theme-landfarz-master/layout/_widget/tagcloud.ejs","hash":"139e91b1e6abcc1e3883bcc03a9a1a7f1d891d7a","modified":1556258222356},{"_id":"themes/hexo-theme-landfarz-master/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1556258222505},{"_id":"themes/hexo-theme-landfarz-master/source/css/style.styl","hash":"8e8458e78717c49c4ff278b741258d77301f6be4","modified":1556258222504},{"_id":"themes/hexo-theme-landfarz-master/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1556258222506},{"_id":"themes/hexo-theme-landfarz-master/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1556258222509},{"_id":"themes/hexo-theme-landfarz-master/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1556258222509},{"_id":"themes/hexo-theme-landfarz-master/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1556258222510},{"_id":"themes/hexo-theme-landfarz-master/source/fancybox/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1556258222531},{"_id":"themes/hexo-theme-landfarz-master/source/js/gallery.js","hash":"735a714e54f0ac229f292a90df3a1f882904f6c7","modified":1556258222533},{"_id":"themes/hexo-theme-landfarz-master/source/fancybox/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1556258222511},{"_id":"source/_posts/.idea/modules.xml","hash":"6abd6dcb985048745c9214d67295bdf1597307ee","modified":1556261967501},{"_id":"themes/hexo-theme-landfarz-master/source/js/jquery.imagesloaded.min.js","hash":"28ef4346743a60c896a9ae492a544c0854904350","modified":1556258222534},{"_id":"themes/hexo-theme-landfarz-master/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1556258222507},{"_id":"themes/hexo-theme-landfarz-master/source/css/_base/utils.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1556258222409},{"_id":"source/_posts/.idea/misc.xml","hash":"7df46872d1421797d543d0323da2e81710cc573d","modified":1556261967611},{"_id":"source/_posts/.idea/workspace.xml","hash":"27ca09dcace18539a14db21444e69d444def3535","modified":1557403494651},{"_id":"themes/hexo-theme-landfarz-master/layout/_partial/post/category.ejs","hash":"8bb3f6ee6296df5a0d527b30d5a46a2387b97cb7","modified":1556258222281},{"_id":"themes/hexo-theme-landfarz-master/layout/_partial/post/share.ejs","hash":"991cf130c37f08c7e948772fb45587592b165b55","modified":1556258222295},{"_id":"themes/hexo-theme-landfarz-master/layout/_partial/post/title.ejs","hash":"7f93b310927d6238effdde15234d8cb242940893","modified":1556258222311},{"_id":"themes/hexo-theme-landfarz-master/layout/_partial/post/tag.ejs","hash":"b21bbfb5479bd5968a610ba8bdb2bdf10d7a40e9","modified":1556258222307},{"_id":"themes/hexo-theme-landfarz-master/layout/_partial/post/gallery.ejs","hash":"fc23ef9b5a412e05436f68ff47146b860d2d4225","modified":1556258222289},{"_id":"themes/hexo-theme-landfarz-master/source/css/_partial/archive.styl","hash":"b6fa84ea80bfbdb3a93f64c06a8c652e4242128e","modified":1556258222419},{"_id":"themes/hexo-theme-landfarz-master/source/css/_base/layout.styl","hash":"b86dca5de36403f104e16321ccd758385b771134","modified":1556258222408},{"_id":"themes/hexo-theme-landfarz-master/source/css/_base/variable.styl","hash":"0833485db79c55e5f8c1cb4dbe46529424923be8","modified":1556258222415},{"_id":"themes/hexo-theme-landfarz-master/source/css/_partial/header.styl","hash":"c9de2a1718e8612efa58fc52ff4012d01b96031d","modified":1556258222441},{"_id":"themes/hexo-theme-landfarz-master/source/css/_partial/index.styl","hash":"8c52340a3bf3ce559502bcb9fdbd28a63598f1d6","modified":1556258222445},{"_id":"themes/hexo-theme-landfarz-master/source/css/_partial/comment.styl","hash":"85106e428b43e9eb488a71f55b9c4a9c33864d66","modified":1556258222432},{"_id":"themes/hexo-theme-landfarz-master/source/css/_partial/sidebar.styl","hash":"35bd524572c4164c9b550ab0c436742f691f4ec4","modified":1556258222449},{"_id":"themes/hexo-theme-landfarz-master/source/css/_partial/article.styl","hash":"ca982aa3f89b48077f8c2f977b805a3f1ff0b268","modified":1556258222425},{"_id":"themes/hexo-theme-landfarz-master/source/css/_partial/syntax.styl","hash":"e08fe789237bca9ea36b8fabaacb2e6070bdc639","modified":1556258222454},{"_id":"themes/hexo-theme-landfarz-master/source/css/font/fontawesome-webfont.woff","hash":"0612cddf2f835cceffccc88fd194f97367d0b024","modified":1556258222491},{"_id":"themes/hexo-theme-landfarz-master/source/css/images/favicon.ico","hash":"b5b7667c7358e7300c4772d481e556b003716dab","modified":1556258222499},{"_id":"themes/hexo-theme-landfarz-master/source/css/_partial/footer.styl","hash":"bc58fb0d56a26ffa9891c80dd23d9add5cae5bdd","modified":1556258222436},{"_id":"themes/hexo-theme-landfarz-master/source/css/font/fontawesome-webfont.svg","hash":"ff51bbb11dfe58345f41cead2c425d6e8be28176","modified":1556258222478},{"_id":"themes/hexo-theme-landfarz-master/source/css/images/body.jpg","hash":"eeecad49947335286ed22fdf942fa99da32b41ca","modified":1556258222498},{"_id":"themes/hexo-theme-landfarz-master/source/css/font/fontawesome-webfont.ttf","hash":"a9468f6a1fe965fbcaf5a1bd6c11705e2fc5f84c","modified":1556258222486},{"_id":"themes/hexo-theme-landfarz-master/source/css/font/fontawesome-webfont.eot","hash":"d775f599ff3f23be082e6a9604b4898718923a37","modified":1556258222469},{"_id":"source/_posts/互联网分层架构之-DAO与服务化/20190510102746.jpg","hash":"8d779afd7db255129543bc1e8b400a160fcd3234","modified":1557455274457},{"_id":"source/_posts/互联网分层架构之-DAO与服务化/20190510103357.jpg","hash":"c8b722905c0bf3132758b8a506852125e6154d8c","modified":1557455647790},{"_id":"source/_posts/互联网分层架构之-DAO与服务化/20190510103756.jpg","hash":"1e9f68842a38a324cfa9e3eb412dbb897e08797d","modified":1557455883980},{"_id":"source/_posts/互联网分层架构之-DAO与服务化/20190510105154.jpg","hash":"271c3d754942ae2d775ce562cc1966a55be1a148","modified":1557456720991},{"_id":"source/_posts/互联网分层架构之-DAO与服务化/20190510110007.jpg","hash":"0708b35ba731787dc6bcbf5dd03d936d5a27a446","modified":1557457213882}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"互联网分层架构之-DAO与服务化","date":"2019-05-09T16:00:00.000Z","_content":"\n互联网**分层架构的本质**，是数据的移动。\n\n互联网分层架构演进的核心原则：\n+ 让上游更高效的获取与处理数据，复用\n+ 让下游能屏蔽数据的获取细节，封装\n\n这些在上一篇《互联网分层架构的本质》中有详尽的描述，在实际系统架构演进过程中，如何利用这两个原则，对系统逐步进行分层抽象呢？咱们先从后端系统开始讲解。\n\n本文主要解答两个问题：\n+ 后端架构，什么时候进行DAO层的抽象\n+ 后端架构，什么时候进行数据服务层的抽象\n\n###核心问题一：什么时候进行DAO层的抽象\n\n![](20190510103357.jpg)\n\n一个业务系统最初的后端结构如上：\n+ web-server层从db层获取数据并进行加工处理\n+ db层存储数据\n\n**此时，web-server层如何获取底层的数据呢？**\n\n![](20190510102746.jpg)\n\nweb-server层获取数据的一段伪代码如上，不用纠结代码的细节，也不用纠结不同编程语言与不同数据库驱动的差异，其获取数据的过程大致为：\n+ 创建一个与数据库的连接，初始化资源\n+ 根据业务拼装一个SQL语句\n+ 通过连接执行SQL语句，并获得结果集\n+ 通过游标遍历结果集，取出每行数据，亦可从每行数据中取出属性数据\n+ 关闭数据库连接，回收资源\n\n如果业务不复杂，这段代码写1次2次还可以，但如果业务越来越复杂，每次都这么获取数据，就略显低效了，有大量冗余、重复、每次必写的代码\n\n**如何让数据的获取更加高效快捷呢？**\n\n通过技术手段实现：\n+ 表与类的映射\n+ 属性与成员的映射\n+ SQL与函数的映射\n\n绝大部分公司正在用的ORM，DAO等技术，就是一种分层抽象，可以提高数据获取的效率，屏蔽连接，游标，结果集这些复杂性。\n\n![](20190510103756.jpg)\n\n**结论**\n\n当手写代码从DB中获取数据，成为通用痛点的时候，就应该抽象出DAO层，简化数据获取过程，提高数据获取效率，向上游屏蔽底层的复杂性。\n\n###核心问题二：什么时候要进行数据服务层的抽象\n\n抽象出DAO层之后，系统架构并不会一成不变：\n+ 随着业务越来越复杂，业务系统会不断进行垂直拆分\n+ 随着数据量越来越大，数据库会进行水平切分\n+ 随着读并发的越来越大，会增加缓存降低数据库的压力\n\n于是系统架构变成了这个样子：\n\n![](20190510105154.jpg)\n\n**业务系统垂直拆分，数据库水平切分，缓存**这些都是常见的架构优化手段\n\n**此时，web-server层如何获取底层的数据呢？**\n\n以用户数据为例，流程一般是这样的：\n+ **先查缓存**：先用uid尝试从缓存获取数据，如果cache hit，数据获取成功，返回User实体，流程结束\n+ **确定路由**：如果cache miss，先查询路由配置，确定uid落在哪个数据库实例的哪个库上\n+ **查询DB**：通过DAO从对应库获取uid对应的数据实体User\n+ **插入缓存**：将kv(uid, User)放入缓存，以便下次缓存查询数据能够命中缓存\n\n如果业务不复杂，这段代码写1次2次还可以，但如果业务越来越复杂，每次都这么获取数据，就略显低效了，有大量冗余、重复、每次必写的代码。\n\n特别的，业务垂直拆分成非常多的子系统之后：\n+ 一旦底层有稍许变化，所有上游的系统都需要升级修改\n+ 子系统之间很可能出现代码拷贝\n+ 一旦拷贝代码，出现一个bug，多个子系统都需要升级修改\n\n如果每个子系统都需要关注缓存，分库，读写分离的复杂性，调用层会疯掉的。\n\n**如何让数据的获取更加高效快捷呢？**\n\n服务化，数据服务层的抽象势在必行。\n\n![](20190510110007.jpg)\n\n通过抽象数据服务层：\n+ web-server层可以通过RPC接口，像调用本地函数一样调用远端的数据\n+ 数据服务层，只有这一处需要关注缓存，分库，读写分离这些复杂性\n\n**结论**\n\n当业务越来越复杂，垂直拆分的系统越来越多，数据库实施了水平切分，数据层实施了缓存加速之后，底层数据获取复杂性成为通用痛点的时候，就应该抽象出数据服务层，简化数据获取过程，提高数据获取效率，向上游屏蔽底层的复杂性。\n\n互联网分层架构是一个很有意思的问题，服务化的引入，并不是越早越好：\n+ 请求处理时间可能会增加\n+ 运维可能会更加复杂\n+ 定位问题可能会更加麻烦\n\n千万别鲁莽的在“微服务”大流之下，草率的进行微服务改造，看似“高大上架构”的背后，隐藏着更多并未接触过的“大坑”。还是那句话，架构和业务的特点和阶段有关：一切脱离业务的架构设计，都是耍流氓。\n\n末了，再次强调下，互联网分层架构的本质，是数据的移动。\n\n互联网分层架构演进的核心原则，是让上游更高效的获取与处理数据，让下游能屏蔽掉数据的复杂性获取细节。\n","source":"_posts/互联网分层架构之-DAO与服务化.md","raw":"---\ntitle: 互联网分层架构之-DAO与服务化\ndate: 2019/05/10\n---\n\n互联网**分层架构的本质**，是数据的移动。\n\n互联网分层架构演进的核心原则：\n+ 让上游更高效的获取与处理数据，复用\n+ 让下游能屏蔽数据的获取细节，封装\n\n这些在上一篇《互联网分层架构的本质》中有详尽的描述，在实际系统架构演进过程中，如何利用这两个原则，对系统逐步进行分层抽象呢？咱们先从后端系统开始讲解。\n\n本文主要解答两个问题：\n+ 后端架构，什么时候进行DAO层的抽象\n+ 后端架构，什么时候进行数据服务层的抽象\n\n###核心问题一：什么时候进行DAO层的抽象\n\n![](20190510103357.jpg)\n\n一个业务系统最初的后端结构如上：\n+ web-server层从db层获取数据并进行加工处理\n+ db层存储数据\n\n**此时，web-server层如何获取底层的数据呢？**\n\n![](20190510102746.jpg)\n\nweb-server层获取数据的一段伪代码如上，不用纠结代码的细节，也不用纠结不同编程语言与不同数据库驱动的差异，其获取数据的过程大致为：\n+ 创建一个与数据库的连接，初始化资源\n+ 根据业务拼装一个SQL语句\n+ 通过连接执行SQL语句，并获得结果集\n+ 通过游标遍历结果集，取出每行数据，亦可从每行数据中取出属性数据\n+ 关闭数据库连接，回收资源\n\n如果业务不复杂，这段代码写1次2次还可以，但如果业务越来越复杂，每次都这么获取数据，就略显低效了，有大量冗余、重复、每次必写的代码\n\n**如何让数据的获取更加高效快捷呢？**\n\n通过技术手段实现：\n+ 表与类的映射\n+ 属性与成员的映射\n+ SQL与函数的映射\n\n绝大部分公司正在用的ORM，DAO等技术，就是一种分层抽象，可以提高数据获取的效率，屏蔽连接，游标，结果集这些复杂性。\n\n![](20190510103756.jpg)\n\n**结论**\n\n当手写代码从DB中获取数据，成为通用痛点的时候，就应该抽象出DAO层，简化数据获取过程，提高数据获取效率，向上游屏蔽底层的复杂性。\n\n###核心问题二：什么时候要进行数据服务层的抽象\n\n抽象出DAO层之后，系统架构并不会一成不变：\n+ 随着业务越来越复杂，业务系统会不断进行垂直拆分\n+ 随着数据量越来越大，数据库会进行水平切分\n+ 随着读并发的越来越大，会增加缓存降低数据库的压力\n\n于是系统架构变成了这个样子：\n\n![](20190510105154.jpg)\n\n**业务系统垂直拆分，数据库水平切分，缓存**这些都是常见的架构优化手段\n\n**此时，web-server层如何获取底层的数据呢？**\n\n以用户数据为例，流程一般是这样的：\n+ **先查缓存**：先用uid尝试从缓存获取数据，如果cache hit，数据获取成功，返回User实体，流程结束\n+ **确定路由**：如果cache miss，先查询路由配置，确定uid落在哪个数据库实例的哪个库上\n+ **查询DB**：通过DAO从对应库获取uid对应的数据实体User\n+ **插入缓存**：将kv(uid, User)放入缓存，以便下次缓存查询数据能够命中缓存\n\n如果业务不复杂，这段代码写1次2次还可以，但如果业务越来越复杂，每次都这么获取数据，就略显低效了，有大量冗余、重复、每次必写的代码。\n\n特别的，业务垂直拆分成非常多的子系统之后：\n+ 一旦底层有稍许变化，所有上游的系统都需要升级修改\n+ 子系统之间很可能出现代码拷贝\n+ 一旦拷贝代码，出现一个bug，多个子系统都需要升级修改\n\n如果每个子系统都需要关注缓存，分库，读写分离的复杂性，调用层会疯掉的。\n\n**如何让数据的获取更加高效快捷呢？**\n\n服务化，数据服务层的抽象势在必行。\n\n![](20190510110007.jpg)\n\n通过抽象数据服务层：\n+ web-server层可以通过RPC接口，像调用本地函数一样调用远端的数据\n+ 数据服务层，只有这一处需要关注缓存，分库，读写分离这些复杂性\n\n**结论**\n\n当业务越来越复杂，垂直拆分的系统越来越多，数据库实施了水平切分，数据层实施了缓存加速之后，底层数据获取复杂性成为通用痛点的时候，就应该抽象出数据服务层，简化数据获取过程，提高数据获取效率，向上游屏蔽底层的复杂性。\n\n互联网分层架构是一个很有意思的问题，服务化的引入，并不是越早越好：\n+ 请求处理时间可能会增加\n+ 运维可能会更加复杂\n+ 定位问题可能会更加麻烦\n\n千万别鲁莽的在“微服务”大流之下，草率的进行微服务改造，看似“高大上架构”的背后，隐藏着更多并未接触过的“大坑”。还是那句话，架构和业务的特点和阶段有关：一切脱离业务的架构设计，都是耍流氓。\n\n末了，再次强调下，互联网分层架构的本质，是数据的移动。\n\n互联网分层架构演进的核心原则，是让上游更高效的获取与处理数据，让下游能屏蔽掉数据的复杂性获取细节。\n","slug":"互联网分层架构之-DAO与服务化","published":1,"updated":"2019-05-10T03:06:05.668Z","_id":"cjvhfzjl40000oo05s3qxv0je","comments":1,"layout":"post","photos":[],"link":"","content":"<p>互联网<strong>分层架构的本质</strong>，是数据的移动。</p>\n<p>互联网分层架构演进的核心原则：</p>\n<ul>\n<li>让上游更高效的获取与处理数据，复用</li>\n<li>让下游能屏蔽数据的获取细节，封装</li>\n</ul>\n<p>这些在上一篇《互联网分层架构的本质》中有详尽的描述，在实际系统架构演进过程中，如何利用这两个原则，对系统逐步进行分层抽象呢？咱们先从后端系统开始讲解。</p>\n<p>本文主要解答两个问题：</p>\n<ul>\n<li>后端架构，什么时候进行DAO层的抽象</li>\n<li>后端架构，什么时候进行数据服务层的抽象</li>\n</ul>\n<p>###核心问题一：什么时候进行DAO层的抽象</p>\n<p><img src=\"/2019/05/10/互联网分层架构之-DAO与服务化/20190510103357.jpg\" alt></p>\n<p>一个业务系统最初的后端结构如上：</p>\n<ul>\n<li>web-server层从db层获取数据并进行加工处理</li>\n<li>db层存储数据</li>\n</ul>\n<p><strong>此时，web-server层如何获取底层的数据呢？</strong></p>\n<p><img src=\"/2019/05/10/互联网分层架构之-DAO与服务化/20190510102746.jpg\" alt></p>\n<p>web-server层获取数据的一段伪代码如上，不用纠结代码的细节，也不用纠结不同编程语言与不同数据库驱动的差异，其获取数据的过程大致为：</p>\n<ul>\n<li>创建一个与数据库的连接，初始化资源</li>\n<li>根据业务拼装一个SQL语句</li>\n<li>通过连接执行SQL语句，并获得结果集</li>\n<li>通过游标遍历结果集，取出每行数据，亦可从每行数据中取出属性数据</li>\n<li>关闭数据库连接，回收资源</li>\n</ul>\n<p>如果业务不复杂，这段代码写1次2次还可以，但如果业务越来越复杂，每次都这么获取数据，就略显低效了，有大量冗余、重复、每次必写的代码</p>\n<p><strong>如何让数据的获取更加高效快捷呢？</strong></p>\n<p>通过技术手段实现：</p>\n<ul>\n<li>表与类的映射</li>\n<li>属性与成员的映射</li>\n<li>SQL与函数的映射</li>\n</ul>\n<p>绝大部分公司正在用的ORM，DAO等技术，就是一种分层抽象，可以提高数据获取的效率，屏蔽连接，游标，结果集这些复杂性。</p>\n<p><img src=\"/2019/05/10/互联网分层架构之-DAO与服务化/20190510103756.jpg\" alt></p>\n<p><strong>结论</strong></p>\n<p>当手写代码从DB中获取数据，成为通用痛点的时候，就应该抽象出DAO层，简化数据获取过程，提高数据获取效率，向上游屏蔽底层的复杂性。</p>\n<p>###核心问题二：什么时候要进行数据服务层的抽象</p>\n<p>抽象出DAO层之后，系统架构并不会一成不变：</p>\n<ul>\n<li>随着业务越来越复杂，业务系统会不断进行垂直拆分</li>\n<li>随着数据量越来越大，数据库会进行水平切分</li>\n<li>随着读并发的越来越大，会增加缓存降低数据库的压力</li>\n</ul>\n<p>于是系统架构变成了这个样子：</p>\n<p><img src=\"/2019/05/10/互联网分层架构之-DAO与服务化/20190510105154.jpg\" alt></p>\n<p><strong>业务系统垂直拆分，数据库水平切分，缓存</strong>这些都是常见的架构优化手段</p>\n<p><strong>此时，web-server层如何获取底层的数据呢？</strong></p>\n<p>以用户数据为例，流程一般是这样的：</p>\n<ul>\n<li><strong>先查缓存</strong>：先用uid尝试从缓存获取数据，如果cache hit，数据获取成功，返回User实体，流程结束</li>\n<li><strong>确定路由</strong>：如果cache miss，先查询路由配置，确定uid落在哪个数据库实例的哪个库上</li>\n<li><strong>查询DB</strong>：通过DAO从对应库获取uid对应的数据实体User</li>\n<li><strong>插入缓存</strong>：将kv(uid, User)放入缓存，以便下次缓存查询数据能够命中缓存</li>\n</ul>\n<p>如果业务不复杂，这段代码写1次2次还可以，但如果业务越来越复杂，每次都这么获取数据，就略显低效了，有大量冗余、重复、每次必写的代码。</p>\n<p>特别的，业务垂直拆分成非常多的子系统之后：</p>\n<ul>\n<li>一旦底层有稍许变化，所有上游的系统都需要升级修改</li>\n<li>子系统之间很可能出现代码拷贝</li>\n<li>一旦拷贝代码，出现一个bug，多个子系统都需要升级修改</li>\n</ul>\n<p>如果每个子系统都需要关注缓存，分库，读写分离的复杂性，调用层会疯掉的。</p>\n<p><strong>如何让数据的获取更加高效快捷呢？</strong></p>\n<p>服务化，数据服务层的抽象势在必行。</p>\n<p><img src=\"/2019/05/10/互联网分层架构之-DAO与服务化/20190510110007.jpg\" alt></p>\n<p>通过抽象数据服务层：</p>\n<ul>\n<li>web-server层可以通过RPC接口，像调用本地函数一样调用远端的数据</li>\n<li>数据服务层，只有这一处需要关注缓存，分库，读写分离这些复杂性</li>\n</ul>\n<p><strong>结论</strong></p>\n<p>当业务越来越复杂，垂直拆分的系统越来越多，数据库实施了水平切分，数据层实施了缓存加速之后，底层数据获取复杂性成为通用痛点的时候，就应该抽象出数据服务层，简化数据获取过程，提高数据获取效率，向上游屏蔽底层的复杂性。</p>\n<p>互联网分层架构是一个很有意思的问题，服务化的引入，并不是越早越好：</p>\n<ul>\n<li>请求处理时间可能会增加</li>\n<li>运维可能会更加复杂</li>\n<li>定位问题可能会更加麻烦</li>\n</ul>\n<p>千万别鲁莽的在“微服务”大流之下，草率的进行微服务改造，看似“高大上架构”的背后，隐藏着更多并未接触过的“大坑”。还是那句话，架构和业务的特点和阶段有关：一切脱离业务的架构设计，都是耍流氓。</p>\n<p>末了，再次强调下，互联网分层架构的本质，是数据的移动。</p>\n<p>互联网分层架构演进的核心原则，是让上游更高效的获取与处理数据，让下游能屏蔽掉数据的复杂性获取细节。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>互联网<strong>分层架构的本质</strong>，是数据的移动。</p>\n<p>互联网分层架构演进的核心原则：</p>\n<ul>\n<li>让上游更高效的获取与处理数据，复用</li>\n<li>让下游能屏蔽数据的获取细节，封装</li>\n</ul>\n<p>这些在上一篇《互联网分层架构的本质》中有详尽的描述，在实际系统架构演进过程中，如何利用这两个原则，对系统逐步进行分层抽象呢？咱们先从后端系统开始讲解。</p>\n<p>本文主要解答两个问题：</p>\n<ul>\n<li>后端架构，什么时候进行DAO层的抽象</li>\n<li>后端架构，什么时候进行数据服务层的抽象</li>\n</ul>\n<p>###核心问题一：什么时候进行DAO层的抽象</p>\n<p><img src=\"/2019/05/10/互联网分层架构之-DAO与服务化/20190510103357.jpg\" alt></p>\n<p>一个业务系统最初的后端结构如上：</p>\n<ul>\n<li>web-server层从db层获取数据并进行加工处理</li>\n<li>db层存储数据</li>\n</ul>\n<p><strong>此时，web-server层如何获取底层的数据呢？</strong></p>\n<p><img src=\"/2019/05/10/互联网分层架构之-DAO与服务化/20190510102746.jpg\" alt></p>\n<p>web-server层获取数据的一段伪代码如上，不用纠结代码的细节，也不用纠结不同编程语言与不同数据库驱动的差异，其获取数据的过程大致为：</p>\n<ul>\n<li>创建一个与数据库的连接，初始化资源</li>\n<li>根据业务拼装一个SQL语句</li>\n<li>通过连接执行SQL语句，并获得结果集</li>\n<li>通过游标遍历结果集，取出每行数据，亦可从每行数据中取出属性数据</li>\n<li>关闭数据库连接，回收资源</li>\n</ul>\n<p>如果业务不复杂，这段代码写1次2次还可以，但如果业务越来越复杂，每次都这么获取数据，就略显低效了，有大量冗余、重复、每次必写的代码</p>\n<p><strong>如何让数据的获取更加高效快捷呢？</strong></p>\n<p>通过技术手段实现：</p>\n<ul>\n<li>表与类的映射</li>\n<li>属性与成员的映射</li>\n<li>SQL与函数的映射</li>\n</ul>\n<p>绝大部分公司正在用的ORM，DAO等技术，就是一种分层抽象，可以提高数据获取的效率，屏蔽连接，游标，结果集这些复杂性。</p>\n<p><img src=\"/2019/05/10/互联网分层架构之-DAO与服务化/20190510103756.jpg\" alt></p>\n<p><strong>结论</strong></p>\n<p>当手写代码从DB中获取数据，成为通用痛点的时候，就应该抽象出DAO层，简化数据获取过程，提高数据获取效率，向上游屏蔽底层的复杂性。</p>\n<p>###核心问题二：什么时候要进行数据服务层的抽象</p>\n<p>抽象出DAO层之后，系统架构并不会一成不变：</p>\n<ul>\n<li>随着业务越来越复杂，业务系统会不断进行垂直拆分</li>\n<li>随着数据量越来越大，数据库会进行水平切分</li>\n<li>随着读并发的越来越大，会增加缓存降低数据库的压力</li>\n</ul>\n<p>于是系统架构变成了这个样子：</p>\n<p><img src=\"/2019/05/10/互联网分层架构之-DAO与服务化/20190510105154.jpg\" alt></p>\n<p><strong>业务系统垂直拆分，数据库水平切分，缓存</strong>这些都是常见的架构优化手段</p>\n<p><strong>此时，web-server层如何获取底层的数据呢？</strong></p>\n<p>以用户数据为例，流程一般是这样的：</p>\n<ul>\n<li><strong>先查缓存</strong>：先用uid尝试从缓存获取数据，如果cache hit，数据获取成功，返回User实体，流程结束</li>\n<li><strong>确定路由</strong>：如果cache miss，先查询路由配置，确定uid落在哪个数据库实例的哪个库上</li>\n<li><strong>查询DB</strong>：通过DAO从对应库获取uid对应的数据实体User</li>\n<li><strong>插入缓存</strong>：将kv(uid, User)放入缓存，以便下次缓存查询数据能够命中缓存</li>\n</ul>\n<p>如果业务不复杂，这段代码写1次2次还可以，但如果业务越来越复杂，每次都这么获取数据，就略显低效了，有大量冗余、重复、每次必写的代码。</p>\n<p>特别的，业务垂直拆分成非常多的子系统之后：</p>\n<ul>\n<li>一旦底层有稍许变化，所有上游的系统都需要升级修改</li>\n<li>子系统之间很可能出现代码拷贝</li>\n<li>一旦拷贝代码，出现一个bug，多个子系统都需要升级修改</li>\n</ul>\n<p>如果每个子系统都需要关注缓存，分库，读写分离的复杂性，调用层会疯掉的。</p>\n<p><strong>如何让数据的获取更加高效快捷呢？</strong></p>\n<p>服务化，数据服务层的抽象势在必行。</p>\n<p><img src=\"/2019/05/10/互联网分层架构之-DAO与服务化/20190510110007.jpg\" alt></p>\n<p>通过抽象数据服务层：</p>\n<ul>\n<li>web-server层可以通过RPC接口，像调用本地函数一样调用远端的数据</li>\n<li>数据服务层，只有这一处需要关注缓存，分库，读写分离这些复杂性</li>\n</ul>\n<p><strong>结论</strong></p>\n<p>当业务越来越复杂，垂直拆分的系统越来越多，数据库实施了水平切分，数据层实施了缓存加速之后，底层数据获取复杂性成为通用痛点的时候，就应该抽象出数据服务层，简化数据获取过程，提高数据获取效率，向上游屏蔽底层的复杂性。</p>\n<p>互联网分层架构是一个很有意思的问题，服务化的引入，并不是越早越好：</p>\n<ul>\n<li>请求处理时间可能会增加</li>\n<li>运维可能会更加复杂</li>\n<li>定位问题可能会更加麻烦</li>\n</ul>\n<p>千万别鲁莽的在“微服务”大流之下，草率的进行微服务改造，看似“高大上架构”的背后，隐藏着更多并未接触过的“大坑”。还是那句话，架构和业务的特点和阶段有关：一切脱离业务的架构设计，都是耍流氓。</p>\n<p>末了，再次强调下，互联网分层架构的本质，是数据的移动。</p>\n<p>互联网分层架构演进的核心原则，是让上游更高效的获取与处理数据，让下游能屏蔽掉数据的复杂性获取细节。</p>\n"}],"PostAsset":[{"_id":"source/_posts/互联网分层架构之-DAO与服务化/20190510102746.jpg","slug":"20190510102746.jpg","post":"cjvhfzjl40000oo05s3qxv0je","modified":0,"renderable":0},{"_id":"source/_posts/互联网分层架构之-DAO与服务化/20190510103357.jpg","slug":"20190510103357.jpg","post":"cjvhfzjl40000oo05s3qxv0je","modified":0,"renderable":0},{"_id":"source/_posts/互联网分层架构之-DAO与服务化/20190510103756.jpg","slug":"20190510103756.jpg","post":"cjvhfzjl40000oo05s3qxv0je","modified":0,"renderable":0},{"_id":"source/_posts/互联网分层架构之-DAO与服务化/20190510105154.jpg","slug":"20190510105154.jpg","post":"cjvhfzjl40000oo05s3qxv0je","modified":0,"renderable":0},{"_id":"source/_posts/互联网分层架构之-DAO与服务化/20190510110007.jpg","slug":"20190510110007.jpg","post":"cjvhfzjl40000oo05s3qxv0je","modified":0,"renderable":0}],"PostCategory":[],"PostTag":[],"Tag":[]}}